{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chernysn\\\\Documents\\\\GITHUB_COPIES\\\\MERN_school_dashboard\\\\frontend\\\\src\\\\context\\\\schoolContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SchoolContext = /*#__PURE__*/createContext();\nexport const authorizeReducer = (authorizeState, action) => {\n  switch (action.type) {\n    case \"SET_AUTH\":\n      return {\n        authorize: true\n      };\n    case \"REMOVE_AUTH\":\n      return {\n        authorize: false\n      };\n    default:\n      return authorizeState;\n  }\n};\nexport const globalRoleReducer = (globalRoleState, action) => {\n  switch (action.type) {\n    case \"CREATE_ROLE\":\n      const createGlobalRole = action.payload;\n      return {\n        globalRole: createGlobalRole\n      };\n    case \"SET_ROLE\":\n      return {\n        ...globalRoleState,\n        globalRole: action.payload\n      };\n    default:\n      return globalRoleState;\n  }\n};\nexport const coursesReducer = (courseState, action) => {\n  switch (action.type) {\n    case \"SET_COURSES\":\n      return {\n        ...courseState,\n        allCourses: action.payload\n      };\n    case \"CREATE_COURSE\":\n      const newCourse = action.payload;\n      const sortedCourses = [...courseState.allCourses, newCourse].sort((a, b) => a.title.localeCompare(b.title));\n      return {\n        ...courseState,\n        allCourses: sortedCourses\n      };\n    case \"DELETE_COURSE\":\n      const courseIdToDelete = action.payload;\n      const updatedCourses = courseState.allCourses.filter(course => course._id !== courseIdToDelete._id);\n      return {\n        ...courseState,\n        allCourses: updatedCourses\n      };\n    default:\n      return courseState;\n  }\n};\nexport const studentsReducer = (studentState, action) => {\n  switch (action.type) {\n    case \"SET_STUDENTS\":\n      return {\n        ...studentState,\n        students: action.payload\n      };\n    case \"CREATE_STUDENT\":\n      const newStudent = action.payload;\n      const sortedStudents = [...studentState.students, newStudent].sort((a, b) => a.name.localeCompare(b.name));\n      return {\n        ...studentState,\n        students: sortedStudents\n      };\n    case \"DELETE_STUDENT\":\n      const studentIdToDelete = action.payload;\n      const updatedStudents = studentState.students.filter(student => student._id !== studentIdToDelete._id);\n      return {\n        ...studentState,\n        students: updatedStudents\n      };\n    case \"UPDATE_STUDENT\":\n      const updatedStudent = action.payload;\n      const updatedStudentsArray = studentState.students.map(student => student._id === updatedStudent._id ? updatedStudent : student);\n      return {\n        ...studentState,\n        students: updatedStudentsArray\n      };\n    case \"ADD_COURSE_STUDENT\":\n      const {\n        studentId,\n        course\n      } = action.payload;\n      const updatedStdCoursesArray = studentState.students.map(student => student._id === studentId ? {\n        ...student,\n        courses: student.courses.some(existingCourse => existingCourse._id === course._id) ? [...student.courses] : [...student.courses, course]\n      } : student);\n      return {\n        ...studentState,\n        students: updatedStdCoursesArray\n      };\n    case \"DROP_COURSE_STUDENT\":\n      const {\n        studentIdDrop,\n        courseIdDrop\n      } = action.payload;\n      const updatedStdCoursesArrayDrop = studentState.students.map(student => student._id === studentIdDrop ? {\n        ...student,\n        courses: student.courses.filter(course => course._id !== courseIdDrop)\n      } : student);\n      return {\n        ...studentState,\n        students: updatedStdCoursesArrayDrop\n      };\n    default:\n      return studentState;\n  }\n};\nexport const assignmentsReducer = (assignmentState, action) => {\n  switch (action.type) {\n    case \"SET_ASSIGNMENTS\":\n      return {\n        ...assignmentState,\n        assignments: action.payload\n      };\n    case \"CREATE_ASSIGNMENT\":\n      const newAssignment = action.payload;\n      const sortedAssignments = [...assignmentState.assignments, newAssignment].sort((a, b) => a.title.localeCompare(b.title));\n      console.log(\"GOT NEW ASSIGNMENT!\");\n      return {\n        ...assignmentState,\n        assignments: sortedAssignments\n      };\n    case \"DELETE_ASSIGNMENT\":\n      const assignmentToDelete = action.payload;\n      const updatedAssignments = assignmentState.assignments.filter(assignment => assignment._id !== assignmentToDelete);\n      return {\n        ...assignmentState,\n        assignments: updatedAssignments\n      };\n    default:\n      return assignmentState;\n  }\n};\nexport const SchoolContextProvider = ({\n  children\n}) => {\n  _s();\n  const [courseState, courseDispatch] = useReducer(coursesReducer, {\n    allCourses: null\n  });\n  const [studentState, studentDispatch] = useReducer(studentsReducer, {\n    students: null\n  });\n  const [assignmentState, assignmentDispatch] = useReducer(assignmentsReducer, {\n    assignments: null\n  });\n  const [authorizeState, authorizeDispatch] = useReducer(authorizeReducer, {\n    authorize: null\n  });\n  const [globalRoleState, globalRoleDispatch] = useReducer(globalRoleReducer, {\n    globalRole: null\n  });\n  return /*#__PURE__*/_jsxDEV(SchoolContext.Provider, {\n    value: {\n      courseState,\n      courseDispatch,\n      studentState,\n      studentDispatch,\n      assignmentState,\n      assignmentDispatch,\n      authorizeState,\n      authorizeDispatch,\n      globalRoleState,\n      globalRoleDispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 5\n  }, this);\n};\n_s(SchoolContextProvider, \"gM59OPC3lTcZHdQQqgp56z1hb8c=\");\n_c = SchoolContextProvider;\nvar _c;\n$RefreshReg$(_c, \"SchoolContextProvider\");","map":{"version":3,"names":["createContext","useReducer","jsxDEV","_jsxDEV","SchoolContext","authorizeReducer","authorizeState","action","type","authorize","globalRoleReducer","globalRoleState","createGlobalRole","payload","globalRole","coursesReducer","courseState","allCourses","newCourse","sortedCourses","sort","a","b","title","localeCompare","courseIdToDelete","updatedCourses","filter","course","_id","studentsReducer","studentState","students","newStudent","sortedStudents","name","studentIdToDelete","updatedStudents","student","updatedStudent","updatedStudentsArray","map","studentId","updatedStdCoursesArray","courses","some","existingCourse","studentIdDrop","courseIdDrop","updatedStdCoursesArrayDrop","assignmentsReducer","assignmentState","assignments","newAssignment","sortedAssignments","console","log","assignmentToDelete","updatedAssignments","assignment","SchoolContextProvider","children","_s","courseDispatch","studentDispatch","assignmentDispatch","authorizeDispatch","globalRoleDispatch","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/chernysn/Documents/GITHUB_COPIES/MERN_school_dashboard/frontend/src/context/schoolContext.js"],"sourcesContent":["import { createContext, useReducer } from \"react\";\r\n\r\nexport const SchoolContext = createContext();\r\n\r\nexport const authorizeReducer = (authorizeState, action) => {\r\n  switch (action.type) {\r\n    case \"SET_AUTH\":\r\n      return {\r\n        authorize: true,\r\n      };\r\n    case \"REMOVE_AUTH\":\r\n      return {\r\n        authorize: false,\r\n      };\r\n\r\n    default:\r\n      return authorizeState;\r\n  }\r\n};\r\n\r\nexport const globalRoleReducer = (globalRoleState, action) => {\r\n  switch (action.type) {\r\n    case \"CREATE_ROLE\":\r\n      const createGlobalRole = action.payload;\r\n      return {\r\n        globalRole: createGlobalRole,\r\n      };\r\n\r\n    case \"SET_ROLE\":\r\n      return {\r\n        ...globalRoleState,\r\n        globalRole: action.payload,\r\n      };\r\n\r\n    default:\r\n      return globalRoleState;\r\n  }\r\n};\r\n\r\nexport const coursesReducer = (courseState, action) => {\r\n  switch (action.type) {\r\n    case \"SET_COURSES\":\r\n      return {\r\n        ...courseState,\r\n        allCourses: action.payload,\r\n      };\r\n    case \"CREATE_COURSE\":\r\n      const newCourse = action.payload;\r\n      const sortedCourses = [...courseState.allCourses, newCourse].sort(\r\n        (a, b) => a.title.localeCompare(b.title)\r\n      );\r\n      return {\r\n        ...courseState,\r\n        allCourses: sortedCourses,\r\n      };\r\n\r\n    case \"DELETE_COURSE\":\r\n      const courseIdToDelete = action.payload;\r\n      const updatedCourses = courseState.allCourses.filter(\r\n        (course) => course._id !== courseIdToDelete._id\r\n      );\r\n      return {\r\n        ...courseState,\r\n        allCourses: updatedCourses,\r\n      };\r\n    default:\r\n      return courseState;\r\n  }\r\n};\r\n\r\nexport const studentsReducer = (studentState, action) => {\r\n  switch (action.type) {\r\n    case \"SET_STUDENTS\":\r\n      return {\r\n        ...studentState,\r\n        students: action.payload,\r\n      };\r\n\r\n    case \"CREATE_STUDENT\":\r\n      const newStudent = action.payload;\r\n      const sortedStudents = [...studentState.students, newStudent].sort(\r\n        (a, b) => a.name.localeCompare(b.name)\r\n      );\r\n      return {\r\n        ...studentState,\r\n        students: sortedStudents,\r\n      };\r\n\r\n    case \"DELETE_STUDENT\":\r\n      const studentIdToDelete = action.payload;\r\n      const updatedStudents = studentState.students.filter(\r\n        (student) => student._id !== studentIdToDelete._id\r\n      );\r\n      return {\r\n        ...studentState,\r\n        students: updatedStudents,\r\n      };\r\n\r\n    case \"UPDATE_STUDENT\":\r\n      const updatedStudent = action.payload;\r\n      const updatedStudentsArray = studentState.students.map((student) =>\r\n        student._id === updatedStudent._id ? updatedStudent : student\r\n      );\r\n      return {\r\n        ...studentState,\r\n        students: updatedStudentsArray,\r\n      };\r\n\r\n    case \"ADD_COURSE_STUDENT\":\r\n      const { studentId, course } = action.payload;\r\n      const updatedStdCoursesArray = studentState.students.map((student) =>\r\n        student._id === studentId\r\n          ? {\r\n              ...student,\r\n              courses: student.courses.some(\r\n                (existingCourse) => existingCourse._id === course._id\r\n              )\r\n                ? [...student.courses]\r\n                : [...student.courses, course],\r\n            }\r\n          : student\r\n      );\r\n      return {\r\n        ...studentState,\r\n        students: updatedStdCoursesArray,\r\n      };\r\n\r\n    case \"DROP_COURSE_STUDENT\":\r\n      const { studentIdDrop, courseIdDrop } = action.payload;\r\n      const updatedStdCoursesArrayDrop = studentState.students.map((student) =>\r\n        student._id === studentIdDrop\r\n          ? {\r\n              ...student,\r\n              courses: student.courses.filter(\r\n                (course) => course._id !== courseIdDrop\r\n              ),\r\n            }\r\n          : student\r\n      );\r\n\r\n      return {\r\n        ...studentState,\r\n        students: updatedStdCoursesArrayDrop,\r\n      };\r\n\r\n    default:\r\n      return studentState;\r\n  }\r\n};\r\n\r\nexport const assignmentsReducer = (assignmentState, action) => {\r\n  switch (action.type) {\r\n    case \"SET_ASSIGNMENTS\":\r\n      return {\r\n        ...assignmentState,\r\n        assignments: action.payload,\r\n      };\r\n\r\n    case \"CREATE_ASSIGNMENT\":\r\n      const newAssignment = action.payload;\r\n      const sortedAssignments = [\r\n        ...assignmentState.assignments,\r\n        newAssignment,\r\n      ].sort((a, b) => a.title.localeCompare(b.title));\r\n\r\n      console.log(\"GOT NEW ASSIGNMENT!\");\r\n\r\n      return {\r\n        ...assignmentState,\r\n        assignments: sortedAssignments,\r\n      };\r\n\r\n    case \"DELETE_ASSIGNMENT\":\r\n      const assignmentToDelete = action.payload;\r\n      const updatedAssignments = assignmentState.assignments.filter(\r\n        (assignment) => assignment._id !== assignmentToDelete\r\n      );\r\n      return {\r\n        ...assignmentState,\r\n        assignments: updatedAssignments,\r\n      };\r\n\r\n    default:\r\n      return assignmentState;\r\n  }\r\n};\r\n\r\nexport const SchoolContextProvider = ({ children }) => {\r\n  const [courseState, courseDispatch] = useReducer(coursesReducer, {\r\n    allCourses: null,\r\n  });\r\n  const [studentState, studentDispatch] = useReducer(studentsReducer, {\r\n    students: null,\r\n  });\r\n  const [assignmentState, assignmentDispatch] = useReducer(assignmentsReducer, {\r\n    assignments: null,\r\n  });\r\n  const [authorizeState, authorizeDispatch] = useReducer(authorizeReducer, {\r\n    authorize: null,\r\n  });\r\n\r\n  const [globalRoleState, globalRoleDispatch] = useReducer(globalRoleReducer, {\r\n    globalRole: null,\r\n  });\r\n\r\n  return (\r\n    <SchoolContext.Provider\r\n      value={{\r\n        courseState,\r\n        courseDispatch,\r\n        studentState,\r\n        studentDispatch,\r\n        assignmentState,\r\n        assignmentDispatch,\r\n        authorizeState,\r\n        authorizeDispatch,\r\n        globalRoleState,\r\n        globalRoleDispatch,\r\n      }}\r\n    >\r\n      {children}\r\n    </SchoolContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}