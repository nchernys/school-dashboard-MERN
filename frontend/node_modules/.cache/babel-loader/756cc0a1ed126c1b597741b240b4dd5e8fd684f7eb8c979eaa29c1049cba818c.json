{"ast":null,"code":"import{useEffect,useState}from\"react\";import{Navigate}from\"react-router-dom\";import{useStudentsContextHook}from\"../context/hooks/useContextHook\";import{useCoursesContextHook}from\"../context/hooks/useContextHook\";import{useAssignmentsContextHook}from\"../context/hooks/useContextHook\";import{useAuthorizeContextHook}from\"../context/hooks/useContextHook\";import{useGlobalRoleContextHook}from\"../context/hooks/useContextHook\";import AddAssignmentToCourse from\"../components/popupAddAssignmentToCourse\";import LoginPage from\"./loginPage\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const ManageAssignments=()=>{const{authorize,authorizeDispatch}=useAuthorizeContextHook();const{students,studentDispatch}=useStudentsContextHook();const{allCourses,courseDispatch}=useCoursesContextHook();const{assignments,assignmentDispatch}=useAssignmentsContextHook();const[selectCourse,setSelectCourse]=useState(\"\");const[studentsPerCourse,setStudentsPerCourse]=useState([]);const[thisCourseGrades,setThisCourseGrades]=useState([]);const[collectAssignments,setCollectAssignments]=useState([]);const[editableCell,setEditableCell]=useState(\"false\");const[averageGrades,setAverageGrades]=useState([]);const[title,setTitle]=useState(\"\");const[description,setDescription]=useState(\"\");useEffect(()=>{const fetchCourses=async()=>{const response=await fetch(\"/api/courses\");const json=await response.json();if(response.ok){courseDispatch({type:\"SET_COURSES\",payload:json});}else{console.error(json);}};fetchCourses();const fetchAssignments=async()=>{const response=await fetch(\"/api/assignments\");const json=await response.json();if(response.ok){assignmentDispatch({type:\"SET_ASSIGNMENTS\",payload:json});}else{console.error(json);}};fetchAssignments();},[courseDispatch,studentDispatch,assignmentDispatch]);const fetchData=async url=>{const response=await fetch(url);const data=await response.json();if(!response.ok){throw new Error(\"Failed to fetch data from \".concat(url,\". Status: \").concat(response.status));}return data;};const handleSelectCourse=async courseId=>{try{const courseUrl=\"/api/courses/\".concat(courseId);const studentsUrl=\"/api/students/\";const assignmentsUrl=\"/api/assignments\";const gradesUrl=\"/api/grades\";const[course,students,assignments,grades]=await Promise.all([fetchData(courseUrl),fetchData(studentsUrl),fetchData(assignmentsUrl),fetchData(gradesUrl)]);setSelectCourse(course);const studentsInThisCourse=students.filter(student=>student.courses.some(course=>course._id===courseId));setStudentsPerCourse(studentsInThisCourse);const findAssignments=assignments.filter(assignment=>assignment.course===course._id);setCollectAssignments(findAssignments);const assignmentIdsInCourse=findAssignments.map(assignment=>assignment._id);const collectCourseGrades=grades.filter(grade=>assignmentIdsInCourse.includes(grade.assignment));setThisCourseGrades(collectCourseGrades);}catch(error){console.error(\"Error in handleSelectCourse:\",error);}};useEffect(()=>{if(selectCourse){handleCalculateAverage(selectCourse);}},[selectCourse]);const handleEditGrades=()=>{setEditableCell(true);};const handleEditGradeScore=async(student,assignment,score)=>{const resGrades=await fetch(\"/api/grades\");const jsonGrades=await resGrades.json();const thisGrade=jsonGrades.filter(grade=>grade.student===student&&grade.assignment===assignment);if(thisGrade.length<=0&&score!==\"\"){const newGrade={assignment,student,score};const resGradeThis=await fetch(\"/api/grades/\",{method:\"POST\",body:JSON.stringify(newGrade),headers:{\"Content-Type\":\"application/json\"}});const jsonGradeThis=await resGradeThis.json();if(!resGradeThis.ok){console.log(jsonGradeThis.error);}else{console.log(jsonGradeThis,\"new grade created\");}}else if(thisGrade.length>0&&score!==\"\"){const resGradeThis=await fetch(\"/api/grades/\".concat(thisGrade[0]._id),{method:\"PATCH\",body:JSON.stringify({score:score}),headers:{\"Content-Type\":\"application/json\"}});if(!resGradeThis.ok){console.log(\"Error updating the grade\");}else{console.log(\"The grade was updated\");}}handleCalculateAverage();};const handleCalculateAverage=async()=>{const gradesUrl=\"/api/grades\";const assignmentsUrl=\"/api/assignments\";const[grades,assignments]=await Promise.all([fetchData(gradesUrl),fetchData(assignmentsUrl)]);const assignmentIdsInCourse=assignments.filter(assignment=>assignment.course===selectCourse._id).map(assignment=>assignment._id);const collectCourseGrades=grades.filter(grade=>assignmentIdsInCourse.includes(grade.assignment));const calculateAverageGrades=[];studentsPerCourse.forEach(student=>{const allStudentScoresAllAssignments=collectCourseGrades.filter(grade=>grade.student===student._id).map(grade=>parseFloat(grade.score)?parseFloat(grade.score):0);let avgGrade=0;if(allStudentScoresAllAssignments.length===0){avgGrade=0;}else{avgGrade=(allStudentScoresAllAssignments.reduce((acc,curr)=>acc+curr,0)/allStudentScoresAllAssignments.length).toFixed(2);}calculateAverageGrades.push({student,avgGrade});});setAverageGrades(calculateAverageGrades);};return/*#__PURE__*/_jsxs(_Fragment,{children:[!authorize&&/*#__PURE__*/_jsx(Navigate,{to:\"/user-login\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"container grades\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Select a course: \"}),/*#__PURE__*/_jsx(\"div\",{className:\"delete-form-page\",children:/*#__PURE__*/_jsxs(\"select\",{onChange:e=>handleSelectCourse(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{children:\"Select course:\"}),allCourses&&allCourses.map(course=>/*#__PURE__*/_jsx(\"option\",{value:course._id,children:course.title},course._id))]})}),selectCourse&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(AddAssignmentToCourse,{title:title,setTitle:setTitle,description:description,setDescription:setDescription,selectCourse:selectCourse,collectAssignments:collectAssignments,assignmentDispatch:assignmentDispatch,handleSelectCourse:handleSelectCourse}),/*#__PURE__*/_jsx(\"h2\",{children:selectCourse&&selectCourse.title}),/*#__PURE__*/_jsx(\"div\",{className:\"scroll\",children:/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:\"STUDENTS & ASSIGNMENTS\"}),collectAssignments&&collectAssignments.map(assignment=>/*#__PURE__*/_jsx(\"td\",{children:assignment.title},assignment._id)),/*#__PURE__*/_jsx(\"td\",{children:\"AVG SCORE\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:studentsPerCourse&&studentsPerCourse.map(student=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:student.name}),collectAssignments.map(assignment=>{var _thisCourseGrades$fin;return/*#__PURE__*/_jsx(\"td\",{onClick:()=>handleEditGrades(student._id,assignment._id),onBlur:e=>handleEditGradeScore(student._id,assignment._id,e.currentTarget.textContent),contentEditable:editableCell?\"true\":\"false\",children:((_thisCourseGrades$fin=thisCourseGrades.find(grade=>grade.student===student._id&&grade.assignment===assignment._id))===null||_thisCourseGrades$fin===void 0?void 0:_thisCourseGrades$fin.score)||\"\"},\"\".concat(student._id,\"-\").concat(assignment._id));}),/*#__PURE__*/_jsxs(\"td\",{children:[averageGrades&&averageGrades.filter(avg=>avg.student._id===student._id).map(avg=>avg.avgGrade),\"%\"]})]},student._id))})]})})]})]})]});};export default ManageAssignments;","map":{"version":3,"names":["useEffect","useState","Navigate","useStudentsContextHook","useCoursesContextHook","useAssignmentsContextHook","useAuthorizeContextHook","useGlobalRoleContextHook","AddAssignmentToCourse","LoginPage","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ManageAssignments","authorize","authorizeDispatch","students","studentDispatch","allCourses","courseDispatch","assignments","assignmentDispatch","selectCourse","setSelectCourse","studentsPerCourse","setStudentsPerCourse","thisCourseGrades","setThisCourseGrades","collectAssignments","setCollectAssignments","editableCell","setEditableCell","averageGrades","setAverageGrades","title","setTitle","description","setDescription","fetchCourses","response","fetch","json","ok","type","payload","console","error","fetchAssignments","fetchData","url","data","Error","concat","status","handleSelectCourse","courseId","courseUrl","studentsUrl","assignmentsUrl","gradesUrl","course","grades","Promise","all","studentsInThisCourse","filter","student","courses","some","_id","findAssignments","assignment","assignmentIdsInCourse","map","collectCourseGrades","grade","includes","handleCalculateAverage","handleEditGrades","handleEditGradeScore","score","resGrades","jsonGrades","thisGrade","length","newGrade","resGradeThis","method","body","JSON","stringify","headers","jsonGradeThis","log","calculateAverageGrades","forEach","allStudentScoresAllAssignments","parseFloat","avgGrade","reduce","acc","curr","toFixed","push","children","to","className","onChange","e","target","value","name","_thisCourseGrades$fin","onClick","onBlur","currentTarget","textContent","contentEditable","find","avg"],"sources":["C:/Users/chernysn/Documents/GITHUB_COPIES/MERN_school_dashboard/src/pages/manageAssignments.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { useStudentsContextHook } from \"../context/hooks/useContextHook\";\r\nimport { useCoursesContextHook } from \"../context/hooks/useContextHook\";\r\nimport { useAssignmentsContextHook } from \"../context/hooks/useContextHook\";\r\nimport { useAuthorizeContextHook } from \"../context/hooks/useContextHook\";\r\nimport { useGlobalRoleContextHook } from \"../context/hooks/useContextHook\";\r\nimport AddAssignmentToCourse from \"../components/popupAddAssignmentToCourse\";\r\nimport LoginPage from \"./loginPage\";\r\n\r\nconst ManageAssignments = () => {\r\n  const { authorize, authorizeDispatch } = useAuthorizeContextHook();\r\n  const { students, studentDispatch } = useStudentsContextHook();\r\n  const { allCourses, courseDispatch } = useCoursesContextHook();\r\n  const { assignments, assignmentDispatch } = useAssignmentsContextHook();\r\n  const [selectCourse, setSelectCourse] = useState(\"\");\r\n  const [studentsPerCourse, setStudentsPerCourse] = useState([]);\r\n  const [thisCourseGrades, setThisCourseGrades] = useState([]);\r\n  const [collectAssignments, setCollectAssignments] = useState([]);\r\n  const [editableCell, setEditableCell] = useState(\"false\");\r\n  const [averageGrades, setAverageGrades] = useState([]);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const fetchCourses = async () => {\r\n      const response = await fetch(\"/api/courses\");\r\n      const json = await response.json();\r\n\r\n      if (response.ok) {\r\n        courseDispatch({ type: \"SET_COURSES\", payload: json });\r\n      } else {\r\n        console.error(json);\r\n      }\r\n    };\r\n    fetchCourses();\r\n\r\n    const fetchAssignments = async () => {\r\n      const response = await fetch(\"/api/assignments\");\r\n      const json = await response.json();\r\n\r\n      if (response.ok) {\r\n        assignmentDispatch({ type: \"SET_ASSIGNMENTS\", payload: json });\r\n      } else {\r\n        console.error(json);\r\n      }\r\n    };\r\n    fetchAssignments();\r\n  }, [courseDispatch, studentDispatch, assignmentDispatch]);\r\n\r\n  const fetchData = async (url) => {\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\r\n        `Failed to fetch data from ${url}. Status: ${response.status}`\r\n      );\r\n    }\r\n\r\n    return data;\r\n  };\r\n\r\n  const handleSelectCourse = async (courseId) => {\r\n    try {\r\n      const courseUrl = `/api/courses/${courseId}`;\r\n      const studentsUrl = `/api/students/`;\r\n      const assignmentsUrl = \"/api/assignments\";\r\n      const gradesUrl = \"/api/grades\";\r\n\r\n      const [course, students, assignments, grades] = await Promise.all([\r\n        fetchData(courseUrl),\r\n        fetchData(studentsUrl),\r\n        fetchData(assignmentsUrl),\r\n        fetchData(gradesUrl),\r\n      ]);\r\n\r\n      setSelectCourse(course);\r\n\r\n      const studentsInThisCourse = students.filter((student) =>\r\n        student.courses.some((course) => course._id === courseId)\r\n      );\r\n      setStudentsPerCourse(studentsInThisCourse);\r\n\r\n      const findAssignments = assignments.filter(\r\n        (assignment) => assignment.course === course._id\r\n      );\r\n      setCollectAssignments(findAssignments);\r\n\r\n      const assignmentIdsInCourse = findAssignments.map(\r\n        (assignment) => assignment._id\r\n      );\r\n      const collectCourseGrades = grades.filter((grade) =>\r\n        assignmentIdsInCourse.includes(grade.assignment)\r\n      );\r\n      setThisCourseGrades(collectCourseGrades);\r\n    } catch (error) {\r\n      console.error(\"Error in handleSelectCourse:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (selectCourse) {\r\n      handleCalculateAverage(selectCourse);\r\n    }\r\n  }, [selectCourse]);\r\n\r\n  const handleEditGrades = () => {\r\n    setEditableCell(true);\r\n  };\r\n\r\n  const handleEditGradeScore = async (student, assignment, score) => {\r\n    const resGrades = await fetch(`/api/grades`);\r\n    const jsonGrades = await resGrades.json();\r\n    const thisGrade = jsonGrades.filter(\r\n      (grade) => grade.student === student && grade.assignment === assignment\r\n    );\r\n    if (thisGrade.length <= 0 && score !== \"\") {\r\n      const newGrade = { assignment, student, score };\r\n      const resGradeThis = await fetch(`/api/grades/`, {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newGrade),\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n      });\r\n\r\n      const jsonGradeThis = await resGradeThis.json();\r\n\r\n      if (!resGradeThis.ok) {\r\n        console.log(jsonGradeThis.error);\r\n      } else {\r\n        console.log(jsonGradeThis, \"new grade created\");\r\n      }\r\n    } else if (thisGrade.length > 0 && score !== \"\") {\r\n      const resGradeThis = await fetch(`/api/grades/${thisGrade[0]._id}`, {\r\n        method: \"PATCH\",\r\n        body: JSON.stringify({ score: score }),\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n      });\r\n\r\n      if (!resGradeThis.ok) {\r\n        console.log(\"Error updating the grade\");\r\n      } else {\r\n        console.log(\"The grade was updated\");\r\n      }\r\n    }\r\n\r\n    handleCalculateAverage();\r\n  };\r\n\r\n  const handleCalculateAverage = async () => {\r\n    const gradesUrl = \"/api/grades\";\r\n    const assignmentsUrl = \"/api/assignments\";\r\n    const [grades, assignments] = await Promise.all([\r\n      fetchData(gradesUrl),\r\n      fetchData(assignmentsUrl),\r\n    ]);\r\n\r\n    const assignmentIdsInCourse = assignments\r\n      .filter((assignment) => assignment.course === selectCourse._id)\r\n      .map((assignment) => assignment._id);\r\n\r\n    const collectCourseGrades = grades.filter((grade) =>\r\n      assignmentIdsInCourse.includes(grade.assignment)\r\n    );\r\n\r\n    const calculateAverageGrades = [];\r\n    studentsPerCourse.forEach((student) => {\r\n      const allStudentScoresAllAssignments = collectCourseGrades\r\n        .filter((grade) => grade.student === student._id)\r\n        .map((grade) =>\r\n          parseFloat(grade.score) ? parseFloat(grade.score) : 0\r\n        );\r\n      let avgGrade = 0;\r\n      if (allStudentScoresAllAssignments.length === 0) {\r\n        avgGrade = 0;\r\n      } else {\r\n        avgGrade = (\r\n          allStudentScoresAllAssignments.reduce((acc, curr) => acc + curr, 0) /\r\n          allStudentScoresAllAssignments.length\r\n        ).toFixed(2);\r\n      }\r\n      calculateAverageGrades.push({ student, avgGrade });\r\n    });\r\n    setAverageGrades(calculateAverageGrades);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!authorize && <Navigate to=\"/user-login\" />}\r\n      <div className=\"container grades\">\r\n        <h2>Select a course: </h2>\r\n        <div className=\"delete-form-page\">\r\n          <select onChange={(e) => handleSelectCourse(e.target.value)}>\r\n            <option>Select course:</option>\r\n            {allCourses &&\r\n              allCourses.map((course) => (\r\n                <option key={course._id} value={course._id}>\r\n                  {course.title}\r\n                </option>\r\n              ))}\r\n          </select>\r\n        </div>\r\n        {selectCourse && (\r\n          <div>\r\n            <AddAssignmentToCourse\r\n              title={title}\r\n              setTitle={setTitle}\r\n              description={description}\r\n              setDescription={setDescription}\r\n              selectCourse={selectCourse}\r\n              collectAssignments={collectAssignments}\r\n              assignmentDispatch={assignmentDispatch}\r\n              handleSelectCourse={handleSelectCourse}\r\n            />\r\n            <h2>{selectCourse && selectCourse.title}</h2>\r\n            <div className=\"scroll\">\r\n              <table>\r\n                <thead>\r\n                  <tr>\r\n                    <td>STUDENTS & ASSIGNMENTS</td>\r\n                    {collectAssignments &&\r\n                      collectAssignments.map((assignment) => (\r\n                        <td key={assignment._id}>{assignment.title}</td>\r\n                      ))}\r\n                    <td>AVG SCORE</td>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {studentsPerCourse &&\r\n                    studentsPerCourse.map((student) => (\r\n                      <tr key={student._id}>\r\n                        <td>{student.name}</td>\r\n                        {collectAssignments.map((assignment) => (\r\n                          <td\r\n                            onClick={() =>\r\n                              handleEditGrades(student._id, assignment._id)\r\n                            }\r\n                            onBlur={(e) =>\r\n                              handleEditGradeScore(\r\n                                student._id,\r\n                                assignment._id,\r\n                                e.currentTarget.textContent\r\n                              )\r\n                            }\r\n                            key={`${student._id}-${assignment._id}`}\r\n                            contentEditable={editableCell ? \"true\" : \"false\"}\r\n                          >\r\n                            {thisCourseGrades.find(\r\n                              (grade) =>\r\n                                grade.student === student._id &&\r\n                                grade.assignment === assignment._id\r\n                            )?.score || \"\"}\r\n                          </td>\r\n                        ))}\r\n                        <td>\r\n                          {averageGrades &&\r\n                            averageGrades\r\n                              .filter((avg) => avg.student._id === student._id)\r\n                              .map((avg) => avg.avgGrade)}\r\n                          %\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ManageAssignments;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}